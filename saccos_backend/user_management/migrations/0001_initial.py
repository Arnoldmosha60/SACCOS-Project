# Generated by Django 5.0.6 on 2024-08-04 22:40

import django.contrib.auth.validators
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=12, unique=True)),
                ('membership_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('profile', models.ImageField(blank=True, null=True, upload_to='uploads/')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('slp', models.CharField(blank=True, max_length=100, null=True)),
                ('cheo', models.CharField(blank=True, max_length=100, null=True)),
                ('taasisi', models.CharField(blank=True, max_length=100, null=True)),
                ('idara', models.CharField(blank=True, max_length=100, null=True)),
                ('check_namba', models.CharField(blank=True, max_length=100, null=True)),
                ('tarehe_ya_kuzaliwa', models.DateField(blank=True, null=True)),
                ('tarehe_ya_kuajiriwa', models.DateField(blank=True, null=True)),
                ('tarehe_ya_kustaafu', models.DateField(blank=True, null=True)),
                ('hadhi_ya_ndoa', models.CharField(blank=True, max_length=50, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('mtaa', models.CharField(blank=True, max_length=100, null=True)),
                ('kata', models.CharField(blank=True, max_length=100, null=True)),
                ('wilaya', models.CharField(blank=True, max_length=100, null=True)),
                ('mkoa', models.CharField(blank=True, max_length=100, null=True)),
                ('mrithi', models.CharField(blank=True, max_length=100, null=True)),
                ('uhusiano', models.CharField(blank=True, max_length=100, null=True)),
                ('mawasiliano_ya_mrithi', models.CharField(blank=True, max_length=12, null=True)),
                ('status', models.BooleanField(default=False)),
                ('userType', models.PositiveIntegerField(choices=[(1, 'System Admin'), (2, 'System User'), (3, 'Pending'), (4, 'Saccos Accountant'), (5, 'DIT Accountant'), (6, 'Chairperson'), (7, 'Secretary')], default=3)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('requested_on', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
        ),
    ]
